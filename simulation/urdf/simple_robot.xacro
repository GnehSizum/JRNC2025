<?xml version="1.0"?>

<robot name="simple_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:property name="length_wheel" value="0.015" />
  <xacro:property name="radius_wheel" value="0.02" />
  <xacro:property name="PI" value="3.1415926"/>
  <xacro:macro name="default_inertial" params="mass">
    <inertial>
      <mass value="${mass}" />
      <inertia ixx="0.01" ixy="0.0" ixz="0.0"
                    iyy="0.01" iyz="0.0" izz="0.01" />
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertial_matrix" params="m r h">
    <inertial>
      <origin xyz="0 0 0" />
      <mass value="${m}" />
      <inertia ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0" iyy="${m*(3*r*r+h*h)/12}" iyz = "0" izz="${m*r*r/2}" />
    </inertial>
  </xacro:macro>

  <!-- base_link to livox_frame -->
  <xacro:arg name="xyz" default="0.12 0.0 0.175" />
  <xacro:arg name="rpy" default="0 0 0" />

  <!-- <link name="base_footprint"/> -->

  <link name="base_link">
    <visual>
      <geometry>
        <box size="0.11 .16 .04"/>
      </geometry>
      <origin rpy="0 0 ${PI/2}" xyz="0 0 0.02"/>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.11 .16 .04"/>
      </geometry>
      <origin rpy="0 0 ${PI/2}" xyz="0 0 0.02"/>
    </collision>
    <xacro:default_inertial mass="4.0"/>
  </link>

  <!-- <joint name="dummy_joint" type="fixed">
     <parent link="base_footprint"/>
     <child link="base_link"/>
  </joint> -->

  <link name="gimbal">
    <visual>
      <geometry>
        <box size="0.11 .11 .05"/>
      </geometry>
      <origin rpy="0 0 ${PI/2}" xyz="0 0 0.01"/>
      <material name="grey"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.11 .11 .05"/>
      </geometry>
      <origin rpy="0 0 ${PI/2}" xyz="0 0 0.01"/>
    </collision>
    <xacro:default_inertial mass="3.0"/>
  </link>

  <joint name="gimbal_to_baselink" type="fixed">
    <parent link="base_link"/>
    <child link="gimbal" />
    <origin xyz="-0.022 0 0.05" rpy="0 0 0" />
    <axis xyz="0 0 1" />
  </joint>

  <link name="head">
    <visual>
      <geometry>
        <box size="0.11 .03 .03"/>
      </geometry>
      <origin rpy="0 0 ${PI/2}" xyz="0 0 0"/>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.11 .03 .03"/>
      </geometry>
      <origin rpy="0 0 ${PI/2}" xyz="0.08 0 0"/>
    </collision>
    <xacro:default_inertial mass="1.0"/>
  </link>

  <joint name="head_to_baselink" type="fixed">
    <parent link="base_link"/>
    <child link="head" />
    <origin xyz="0.095 0 0.02" rpy="0 0 0" />
    <axis xyz="1 0 0" />
  </joint>

  <link name="laser">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <cylinder radius="0.02" length="0.03" />
      </geometry>
      <material name="blue">
        <color rgba="0 0 1 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.02" length="0.03" />
      </geometry>
    </collision>
    <xacro:cylinder_inertial_matrix m="0.4" r="0.02" h="0.03" />
  </link>

  <joint name="laser_joint" type="fixed">
    <parent link="gimbal" />
    <child link="laser" />
    <origin xyz="0 0 0.04" rpy="0 0 0" />
    <axis xyz="1 0 0" />
  </joint>

  <link name="camera">
    <visual>
      <geometry>
        <box size="0.04 0.02 0.02" />
      </geometry>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
      <material name="green">
        <color rgba="0 1 0 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.04 0.02 0.02" />
      </geometry>
    </collision>
    <xacro:default_inertial mass="0.4"/>
  </link>

  <joint name="camera_joint" type="fixed">
    <parent link="base_link" />
    <child link="camera" />
    <origin xyz="0.08 0 0.05" />
  </joint>

  <link name="wheel_1">
    <visual>
      <geometry>
        <cylinder length="${length_wheel}" radius="${radius_wheel}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <cylinder length="${length_wheel}" radius="${radius_wheel}"/>
      </geometry>
    </collision>
    <mu1>0.5</mu1>
    <mu2>0.5</mu2>
    <xacro:default_inertial mass="0.5"/>
  </link>

  <link name="wheel_2">
    <visual>
      <geometry>
        <cylinder length="${length_wheel}" radius="${radius_wheel}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="${length_wheel}" radius="${radius_wheel}"/>
      </geometry>
    </collision>
    <mu1>0.5</mu1>
    <mu2>0.5</mu2>
    <xacro:default_inertial mass="0.5"/>
  </link>

  <link name="wheel_3">
    <visual>
      <geometry>
        <cylinder length="${length_wheel}" radius="${radius_wheel}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="${length_wheel}" radius="${radius_wheel}"/>
      </geometry>
    </collision>
    <mu1>0.5</mu1>
    <mu2>0.5</mu2>
    <xacro:default_inertial mass="0.5"/>
  </link>

  <link name="wheel_4">
    <visual>
      <geometry>
        <cylinder length="${length_wheel}" radius="${radius_wheel}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="${length_wheel}" radius="${radius_wheel}"/>
      </geometry>
    </collision>
    <mu1>0.5</mu1>
    <mu2>0.5</mu2>
    <xacro:default_inertial mass="0.5"/>
  </link>

  <joint name="base_to_wheel1" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_1"/>
    <origin rpy="${-PI/2} 0 0" xyz="0.05 0.064 0"/>
    <axis xyz="0 0 1" />
  </joint>

  <joint name="base_to_wheel2" type="continuous">
    <axis xyz="0 0 1" />
    <anchor xyz="0 0 0" />
    <limit effort="100" velocity="100" />
    <parent link="base_link"/>
    <child link="wheel_2"/>
    <origin rpy="${-PI/2} 0 0" xyz="-0.05 0.064 0"/>
  </joint>

  <joint name="base_to_wheel3" type="continuous">
    <parent link="base_link"/>
    <axis xyz="0 0 1" />
    <child link="wheel_3"/>
    <origin rpy="${-PI/2} 0 0" xyz="0.05 -0.064 0"/>
  </joint>

  <joint name="base_to_wheel4" type="continuous">
    <parent link="base_link"/>
    <axis xyz="0 0 1" />
    <child link="wheel_4"/>
    <origin rpy="${-PI/2} 0 0" xyz="-0.05 -0.064 0"/>
  </joint>


  <!-- Gazebo插件设置相关 -->
  <gazebo reference="base_link">
    <material>Gazebo/White</material>
  </gazebo>
  <gazebo reference="gimbal">
    <material>Gazebo/White</material>
  </gazebo>
  <gazebo reference="head">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="wheel_1">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="wheel_2">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="wheel_3">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="wheel_4">
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="laser">
    <material>Gazebo/Blue</material>
    <sensor type="ray" name="laser">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>10.0</update_rate>
      <ray>
        <scan>
          <horizontal>
              <samples>360</samples>           <!--旋转一周采的点数-->
              <resolution>1</resolution>       <!--每射线测距测距-->
              <min_angle>-3.14</min_angle>     <!--采样范围，负逆正顺-->
              <max_angle>3.14</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.15</min>    <!--可检测距离  米-->
          <max>6.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_laser" filename="libgazebo_ros_ray_sensor.so">
        <topic>scan</topic>
        <ros>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
      </plugin>
      <topic>scan</topic>
    </sensor>
  </gazebo>

  <gazebo reference="camera">
    <material>Gazebo/Green</material>
    <gravity>true</gravity>
    <sensor type="camera" name="camera_sensor">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="gazebo_camera" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>/camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Drive controller plugin-->
  <!-- https://github.com/ros-simulation/gazebo_ros_pkgs/wiki/ROS-2-Migration:-Planar-Move -->
  <gazebo>
    <plugin name="mecanum_controller" filename="libgazebo_ros_planar_move.so">
      <ros>
        <!-- Add a namespace -->
        <namespace>/</namespace>
        <!-- Remap the default topic -->
        <remapping>cmd_vel:=cmd_vel</remapping>
        <remapping>odom:=odom</remapping>
      </ros>

      <!-- Set control loop update rate -->
      <update_rate>100</update_rate>
      <!-- Set odom publish rate -->
      <publish_rate>10</publish_rate>

      <!-- Set if odom required -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>

      <!-- Frame IDs -->
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>

      <!-- Set odom covariance -->
      <covariance_x>0.0001</covariance_x>
      <covariance_y>0.0001</covariance_y>
      <covariance_yaw>0.01</covariance_yaw>
    </plugin>
  </gazebo>

</robot>
